类加载器
类加载器的作用：
    负责将class文件加载到内存中，并为之生成对应的java.lang.Class对象
	虽然我们不用过分关心类加载机制，但是了解这个机制我们就能更好的理解程序的运行
	
JVM的类加载机制
    全盘负责：
	    就是党一个类加载器负责加载某个C拉时，该C拉所依赖的和引用的其他C拉也将有该类
		加载器负责载入，除非显示使用另外一个类加载器来载入
	父类委托：
	    就是当一个类加载器负责加载某个C拉时，先让父类加载器试图加载该Class，只有在父
		类加载器无法加载该类时才尝试从自己的类路径中加载该类
	缓存机制：
	    保证所有加载过的Class都会被缓存，当程序需要使用某个Class对象时，类加载器先从
		缓存区中搜索该Class,只有当缓存区中没有这个Class对象的时候，才会读取该类的二
		进制数据，并将其转换为Class对象，存储到缓存区
		
ClassLoader: 是负责加载类的对象
    java运行时具有以下内置类加载器
	    Bootstrap class loader:
		  //它是虚拟机的内置类加载器，通常表示为null，并且没有父null
		Platform class loader:
		  //平台类加载器可以看到所有平台类，平台类包括由平台类加载器或其祖先定义的
		  javaSE平台API，其实现类和JDK特定的运行时类
		System class loader:
		  //它也被称为应用程序类加载器，与平台类加载器不同。系统类加载器通过用于定义
		  应用程序类路径，模块路径和JDK特定工具上的类
		  
		  类加载器的继承关系：System的父类加载器为Platform,而Platform的父类加载器为
		  Bootstrap
		  
	ClassLoader 中的两方法
	    static ClassLoader getSystemClassLoader()
		  //返回用于委托的系统类加载器
		ClassLoader getParent()
		  //返回父类加载器进行委托