线程同步安全问题

如何判断是否存在数据安全问题
    1、是否是多线程环境
	2、是否有共享数据
	3、是否有多条语句操作共享数据
	
	解决方法：
	    同步代码块
		锁多条语句操作共享数据，可以使用同步代码块实现
		格式：
		    synchronized(任意对象){
			    多条语句操作共享数据的代码
			}
	synchronized(任意对象)：就相当于给代码加锁了，任意对象就可以看出是一把锁
	同步的好处和弊端：
	    好处：解决了多线程的数据安全问题
		弊端：当线程很多时，因为美国线程都会去判断同步上的锁，这是很耗费资源的，
		无形中就会降低程序的运行效率
		
		
	    同步方法：
		    就是把synchronized关键字加到方法上
			格式： 
			    修饰符 synchronized 返回值类型 方法名（方法参数）{
				
				} 
		同步方法的锁对象是什么呢
		    this
			
		同步静态方法：就是把synchronized关键字加到静态方法上
		    格式：
			    修饰符 static synchronized 返回值类型 方法名(方法参数){
				
				}
		同步静态方法的锁对象是什么呢
		    字节码文件：
			    类名.class