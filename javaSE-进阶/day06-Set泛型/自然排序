自然排序

Comparable
   存储学生对象并遍历，创建TreeSet集合使用无参构造方法
   要求：
      按照年龄从小到大排序，年龄相同时，按照姓名的字母顺序排序
	  
【String类实现了Comparable接口所有字符串本身就可以进行自然排序】

  该需求存入student对象，按照年龄大小排序需要在Student类中
  重写compareTo方法，
  
  具体实现： 
    public int compareTo(Student7 o){  
	
        //this当前变量，是要存入的当前数据
        //o.age是上一个变量，是前一个存入的数据
        //当存入第一个元素时，this.age - o.age 为正
        int num = this.age - o.age;
        int num2 = num==0 ? this.name.compareTo(o.name) : num;
		
		
		
        //return 0   表示两个数相同 不存储
        //return 1   表示后一个比前一个大，按存储顺序排（升序）
        //return -1  表示现存的大于后存的，倒序存储（降序）
        return num2;
	}
	
结论：
    1、用TreeSet集合存储自定义对象，无参构造方法使用的是自然排序对元素进行
	    排序的
	2、自然排序，就是让元素所属的类实现Comparable接口，重写compareTo(I o)
	    方法
	3、重写方法时，一定要注意排序规则必须按照要求的主要条件和次要条件来写
	
	
使用比较器排序Comparator
    1、存储学生对象并遍历，创建TreeSet集合使用带参构造方法
	2、要求： 按照年龄从小到大排序，年龄相同时，按照姓名的字母顺序排序
	
	过程，
	  创建TreeSet对象，使用匿名内部类的方式重写compare方法
	  创建学生对象，然后添加元素
	  遍历
	  
	结论：
	    1、用TreeSet集合存储自定义对象，带参构造方法使用的是比较器排序
	       对元素进行排序的。
		2、比较器排序，就是让集合构造方法接受Comparator的实现类对象，
		   重写compare（T o1,T o2）方法
		3、重写方法时，一定要注意排序规则必须按照要求的注意条件和次
		   要条件来写