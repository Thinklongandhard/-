数据库设计
  软件研发步骤
    需求分析，设计，编码，测试，安装部署
  数据库设计步骤
    需求分析：数据是什么，都有哪些，数据与属性的特点是什么
    逻辑分析：分析数据与数据之间的关系，是一对一还是一对多或者多对多
    物理设计：根据数据库自身的特点，把逻辑分析出的关系转换为物理设计
    维护设计：对新的需求进行建表，表优化

  表关系：
      一对一：实现方式，在任意一方添加外键，关联一方主键，并设置外键值唯一unique
      一对多：实现方式，在多的一方添加外键，关联另一方主键
      多对多：实现方式，设计第三张表，通过第三张表来转化为一对多的方式，中间表至少包含两个外键

约束：
  为了使录入的数据时正常合法的就要在添加表的时候进行条件约束
  
  约束分类：
    非空约束
        保证数据不为空 ： not null；
    唯一约束
        保证数据不会重复：unique
    主键约束
        以该数据为主键，该数据不为空且唯一：primary key
    检查约束
        保证列中的值满足一定条件：check
    默认约束
        保存数据时，为指定值采用默认值：default
    外键约束
        外键用来让两个表之间建立连接，保证数据的一致性和完整性：foreign key

创建表时设置外键
  create table 表名（
         列1 数据类型1，
         列2 数据类型2
         .........
         (设计一个独一的外键名称)  foreign key  (外键列名) references 主表(主表列名)
   ）；
  创建表以后添加一个外键约束
    alter table 表名 add constraint 外键名称(给外键的列名起一个别名) foreign key (外键字段名) references 主表名称(主表列名)
  删除外键
    alter table 表名 drop foreign key 外键名称

多表查询
 隐性内查询
  select 数据列表 from 表名1,表名2  where 条件
 显示内查询
  select 数据列表 from 表名1 join 表名2 on 连接条件 where 筛选条件
 外连接
  左外连接
   select 数据列表 from 表名1 left outer join 表2 on 连接条件 where 筛选条件
  右外连接
   select 数据列表 from 表名1 right outer join 表2 on 连接条件 where 筛选条件
子查询
  查询中嵌套查询
    单行单列
       select 数据列表 from 表 where 列名 = (子查询)
    多行单列
       select 数据列表 from 表 where 列名 in (多个子查询条件)
    多行多列
       select 数据列表 from （子查询）,表2 where 查询条件;


事务
   MySQL中每一条语句都是一个事务
   事务有原子性，一致性，隔离性，持久性
   原子性，事务是最小的操作单元，要么同时成功，要么同时失败
   一致性，事务完成时，必须要保证数据的一致状态，都是成功状态
   隔离性，在事务没有进行上传时，修改的数据时临时的，只有在本查询表中数据发生了改变，其他查询表中数据不变
   持久性，当事务上传成功后，数据的修改就是永久性的了，

 开启事务
    begin 或者 start transaction
 提交事务
    commit;
 回滚事务
    rollback;
在MySQL中事务的默认状态时1(自动上传状态)，可以修改状态为手动上传状态 set @@autoconmit = 0;
在Oracle数据库中，事务的默认状态时0(手动上传状态)每条语句都有进行commit提交
查询事务状态 select @@autoconmit；