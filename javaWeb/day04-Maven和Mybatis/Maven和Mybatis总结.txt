总结

Maven是专门用于管理和构建java项目的工具，它的主要功能
  提供了一套标准化的项目结构
  提供了一套标准化的构建流
  提供了一套依赖管理机制

  因为有了一套标准的项目结构，所有在各个IDE软件中编写的代码可以在不同软件中使用

 使用Maven可以简化导入各种jar包的步骤，在编写代码时，会有需要各种依赖，导入依赖就会
 变得有些繁琐，通过Maven工具可以简化这个步骤

 Maven是一个开源的托管平台，有一个中央仓库，中央仓库中包含着各种开源免费的jar包，
 通过我们自己本机的本地库可以自动检测本地库中是否有需要用到的jar包，如果没有就会去
 检测中央仓库中有没有这个jar包，如果有，就会自动下载到本地仓库中，然后调用该jar包
 使用完后，不会删除，可以重复使用

 Maven仓库分类：本地仓库，远程仓库，中央仓库
  远程仓库是公司或者团队自己搭建的私有仓库，可以将中央仓库中的所有jar包都同步到私有
  仓库中，也可以添加各种收费的jar包
 jar包的查找顺序：
   本地仓库 -> 远程仓库 -> 中央仓库

Maven坐标详解
  什么是坐标？
    Maven中的坐标是资源的唯一标识
    使用坐标定义项目或引入项目中需要的依赖
  坐标的主要组成
    groupld : 定义当前Maven项目隶属组织名称
    artifactld : 定义当前Maven项目名称
    version ：定义当前项目版本号
  使用坐标导入jar包-自动导入
    选择idea中 File -> Setting
    在弹出的面板中找到Build Tools
    选择Any changes 点击 ok 即可生效
	  
  使用坐标导入jar包-快捷方式
    在pom.xml中按 alt+insert 选择Dependency
    在弹出的面板中搜索对应坐标，然后双击选中对应坐标
    点击刷新按钮，坐标生效

依赖：
   通过设置坐标的依赖范围，可以设置对应 jar包的作用范围，编译环境，测试环境
	运行环境
	
	依赖范围：  默认是 compile 
	compile  编译，测试，运行
	test     测试
	provided 编译，测试
 	runtime  测试，运行
	system   编译，测试
	import   引入DependencyManagement



MyBatis 是一个持久层框架，封装了jdbc的操作，解决了硬编码等问题

  mybatis快速入门，环境搭建：
   1、创建数据库表，添加元素
   2、创建maven工程，导入依赖，mybatis依赖，MySQL依赖，Junit单元测试依赖，添加slf4j日志api，
     添加logback-classic依赖，添加logback-core依赖
   3、添加完成依赖后开始编写核心配置文件配置扫描类型别名，配置数据库连接信息，配置映射SQL语句
   4、配置映射SQL语句，在配置文件中设置名称空间，SQL语句的唯一标识，还有SQL语句的返回值类型
   5、编写pojoJavaBean类，将返回值类型设为需要返回的Javabean类，在映射SQL配置文件中编写SQL
     语句。
   6、编写映射SQL配置文件的接口，并将SQL语句的唯一标识作为方法名编写抽象方法
   7、开始编码
      编写单元测试，使用mybatis提供的API进行测试，
      获取userMapper代理对象，传入映射SQL的接口的字节码文件
      通过userMapper对象调用接口中的方法获取返回值
      操作返回值
      释放资源

注意：编写mapper接口是的注意事项：
   位置和名称一致
   映射配置文件中namespace要和接口的全类名一样
   SQL的唯一标识要和方法名称一致，resultType要和方法的返回值一样，如果返回值是集合，那么
   resultType取集合的泛型，标识每一条数据要封装的类型

根据id查询用户信息：
   实现步骤：在接口中定义方法 --> 在映射配置文件中配置SQL --> 在单元测试中测试
   占位符： #{列名(对象的属性名)} 和 ${列名(属性名)}  ${ }拼接占位符会存在SQL注入问题
                 #{ } 会将其替换为 ? 占位符，防止SQL注入